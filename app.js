(()=>{const $=(s,r=document)=>r.querySelector(s),$$=(s,r=document)=>Array.from(r.querySelectorAll(s)),SVGNS="http://www.w3.org/2000/svg",ALLOWED=[0,6,7,8,9,10],SUMS=Array.from(new Set(ALLOWED.flatMap(a=>ALLOWED.map(b=>a+b)))).sort((a,b)=>a-b),QRCDN="https://cdn.jsdelivr.net/gh/davidshimjs/qrcodejs/qrcode.min.js";
function loadQRLIB(){return new Promise((res,rej)=>{if(window.QRCode)return res();const s=document.createElement('script');s.src=QRCDN;s.defer=true;s.onload=()=>res();s.onerror=()=>rej(new Error('QRCode CDN introuvable'));document.head.appendChild(s)})}
const state={board:[],centers:[],teams:[{name:"Équipe A",color:"#5ac8fa",p1:"A1",p2:"A2",pos:0,skip:0,arrowsPerShooter:3,cumul:0},{name:"Équipe B",color:"#ff7b7b",p1:"B1",p2:"B2",pos:0,skip:0,arrowsPerShooter:3,cumul:0}],round:1,history:[],cineAuto:true,stratOn:true};
function setActiveView(id){$$(".screen").forEach(sc=>sc.classList.remove("active"));$(id).classList.add("active");$$(".btn.tab").forEach(b=>b.classList.remove("active"));if(id==="#view-points")$("#nav-points").classList.add("active");if(id==="#view-board")$("#nav-board").classList.add("active")}
$("#nav-points").addEventListener("click",()=>setActiveView("#view-points"));$("#nav-board").addEventListener("click",()=>setActiveView("#view-board"));
function toast(h){const d=$("#modal");$("#modal-content").innerHTML=h;d.showModal()}function save(){localStorage.setItem("arcathlon-spirale-v34",JSON.stringify(state))}function load(){const t=localStorage.getItem("arcathlon-spirale-v34");if(!t)return!1;try{Object.assign(state,JSON.parse(t));return!0}catch{return!1}}
async function enterCine(){document.body.classList.add("cine");$("#hud").hidden=false;const wrap=$("#board-wrap");try{if(wrap.requestFullscreen)await wrap.requestFullscreen()}catch{}}async function exitCine(){$("#hud").hidden=true;document.body.classList.remove("cine");try{if(document.fullscreenElement)await document.exitFullscreen()}catch{}}
function spiralPos(i){const cx=600,cy=600,step=.44,a=30,b=12,th=i*step,r=a+b*th;return{x:cx+r*Math.cos(th),y:cy+r*Math.sin(th)}}function buildCenters(){state.centers=state.board.map((_,i)=>spiralPos(i))}
function renderBoard(){const svg=$("#board");svg.innerHTML="";const defs=document.createElementNS(SVGNS,"defs"),grad=document.createElementNS(SVGNS,"radialGradient");grad.setAttribute("id","finishGrad");const s1=document.createElementNS(SVGNS,"stop");s1.setAttribute("offset","0%");s1.setAttribute("stop-color","#ffb703");const s2=document.createElementNS(SVGNS,"stop");s2.setAttribute("offset","100%");s2.setAttribute("stop-color","#7b2cbf");grad.appendChild(s1);grad.appendChild(s2);defs.appendChild(grad);const marker=document.createElementNS(SVGNS,"marker");marker.setAttribute("id","arrow");marker.setAttribute("viewBox","0 0 10 10");marker.setAttribute("refX","5");marker.setAttribute("refY","5");marker.setAttribute("markerWidth","7");marker.setAttribute("markerHeight","7");marker.setAttribute("orient","auto-start-reverse");const p=document.createElementNS(SVGNS,"path");p.setAttribute("d","M 0 0 L 10 5 L 0 10 z");p.setAttribute("fill","#4cc9f0");marker.appendChild(p);defs.appendChild(marker);svg.appendChild(defs);buildCenters();const pathShadow=document.createElementNS(SVGNS,"polyline");pathShadow.setAttribute("id","path-shadow");pathShadow.setAttribute("points",state.centers.map(c=>`${c.x},${c.y}`).join(" "));svg.appendChild(pathShadow);const path=document.createElementNS(SVGNS,"polyline");path.setAttribute("id","path");path.setAttribute("points",state.centers.map(c=>`${c.x},${c.y}`).join(" "));path.setAttribute("marker-end","url(#arrow)");svg.appendChild(path);
state.board.forEach((sq,i)=>{const g=document.createElementNS(SVGNS,"g"),dark=i%2===1?" dark":"";g.setAttribute("class","square"+dark+(sq.type?" "+sq.type:"")+(i===state.board.length-1?" finish":""));const {x,y}=state.centers[i];g.setAttribute("transform",`translate(${x-26},${y-22})`);const r=document.createElementNS(SVGNS,"rect");r.setAttribute("width","54");r.setAttribute("height","44");r.setAttribute("rx","12");r.setAttribute("ry","12");const t=document.createElementNS(SVGNS,"text");t.setAttribute("x","27");t.setAttribute("y","28");t.setAttribute("text-anchor","middle");t.textContent=sq.hidden?"?":(sq.label||i);const title=document.createElementNS(SVGNS,"title");title.textContent=(sq.hidden?"Mystère":(sq.label||("Case "+i)))+` (#${i})`;g.appendChild(r);g.appendChild(t);g.appendChild(title);svg.appendChild(g)});const aim=document.createElementNS(SVGNS,"g");aim.setAttribute("id","aim-layer");svg.appendChild(aim);placeTokens(true);updateStrategyView();updateMiniMap()}
function placeTokens(initial=false){$$(".token",$("#board")).forEach(n=>n.remove());state.teams.forEach((tm,idx)=>{const {x,y}=state.centers[tm.pos],g=document.createElementNS(SVGNS,"g");g.setAttribute("class","token duo");g.setAttribute("transform",`translate(${x-6},${y-36})`);const c1=document.createElementNS(SVGNS,"circle");c1.setAttribute("class","c1");c1.setAttribute("r","7");c1.setAttribute("cx","6");c1.setAttribute("cy","6");c1.setAttribute("fill",tm.color);const ring1=document.createElementNS(SVGNS,"circle");ring1.setAttribute("class","inner c1");ring1.setAttribute("r","10");ring1.setAttribute("cx","6");ring1.setAttribute("cy","6");const c2=document.createElementNS(SVGNS,"circle");c2.setAttribute("class","c2");c2.setAttribute("r","7");c2.setAttribute("cx","6");c2.setAttribute("cy","6");c2.setAttribute("fill",tm.color);const ring2=document.createElementNS(SVGNS,"circle");ring2.setAttribute("class","inner c2");ring2.setAttribute("r","10");ring2.setAttribute("cx","6");ring2.setAttribute("cy","6");const title=document.createElementNS(SVGNS,"title");title.textContent=`${tm.name} (#${tm.pos})`;g.appendChild(c1);g.appendChild(ring1);g.appendChild(c2);g.appendChild(ring2);g.appendChild(title);$("#board").appendChild(g)});if(initial)return}
function updateMiniMap(){const N=state.board.length-1,a=Math.round(100*state.teams[0].pos/N),b=Math.round(100*state.teams[1].pos/N);$("#minimap").innerHTML=`<b>Progression</b><br> ${state.teams[0].name}: ${a}% &nbsp;|&nbsp; ${state.teams[1].name}: ${b}%`}
function buildArcherUI(id,name,teamIndex){const host=$("#"+id);host.innerHTML="";const title=document.createElement("div");title.className="who";title.textContent=name;host.appendChild(title);const max=state.teams[teamIndex].arrowsPerShooter||3;for(let i=1;i<=max;i++){const row=document.createElement("div");row.className="arrow-row";const badge=document.createElement("span");badge.className="badge";badge.textContent=`Flèche ${i}`;const group=document.createElement("div");group.className="value-group";group.dataset.for=`${id}-a${i}`;ALLOWED.forEach(v=>{const b=document.createElement("button");b.className="value-btn";b.type="button";b.textContent=String(v);b.dataset.val=String(v);b.setAttribute("aria-pressed","false");b.addEventListener("click",()=>{$$(".value-btn",group).forEach(x=>x.setAttribute("aria-pressed","false"));b.setAttribute("aria-pressed","true");computeLiveTotals();updatePointsView();updateStrategyView()});group.appendChild(b)});const best=document.createElement("span");best.className="best";best.id=`${id}-a${i}-sel`;row.appendChild(badge);row.appendChild(group);row.appendChild(best);host.appendChild(row)}}function getArrowValue(ref){const g=$(`.value-group[data-for="${ref}"]`),p=g?$(`.value-btn[aria-pressed="true"]`,g):null;return p?Number(p.dataset.val):0}function bestOfShooter(prefix,teamIndex){const arrows=state.teams[teamIndex].arrowsPerShooter||3,vals=[];for(let i=1;i<=arrows;i++)vals.push(getArrowValue(`${prefix}-a${i}`));return Math.max(...vals,0)}function computeTotals(){const a1=bestOfShooter("A1",0),a2=bestOfShooter("A2",0),b1=bestOfShooter("B1",1),b2=bestOfShooter("B2",1);return{A:{shooters:[a1,a2],total:a1+a2},B:{shooters:[b1,b2],total:b1+b2}}}function computeLiveTotals(){const t=computeTotals();$("#A-total").textContent=t.A.total;$("#B-total").textContent=t.B.total;return t}
function scoreOfSquare(sq){if(!sq||!sq.type)return 0;switch(sq.type){case"bonus":return 30;case"goal":return 50;case"replay":return 25;case"teleport":return 10;case"steal":return 25;case"mystery":return 5;case"malus":return-35;case"skip":return-50;default:return 0}}function colorForType(t){switch(t){case"bonus":return"#2ec4b6";case"malus":return"#ff7b7b";case"skip":return"#ffd166";case"mystery":return"#4cc9f0";case"teleport":return"#9cc2ff";case"goal":return"#a78bfa";case"steal":return"#f59e0b";default:return"#d1e4ff"}}
function updatePointsView(){const from=[state.teams[0].pos,state.teams[1].pos];[["#strat-A",0],["#strat-B",1]].forEach(([sel,teamIdx])=>{const ul=$(sel);ul.innerHTML="";SUMS.map(s=>{const idx=Math.min(from[teamIdx]+s,state.board.length-1),sq=state.board[idx],score=scoreOfSquare(sq)+(idx===state.board.length-1?100:0);return{advance:s,idx,sq,score}}).sort((a,b)=>b.score-a.score||a.advance-b.advance).slice(0,8).forEach(c=>{const li=document.createElement("li");li.innerHTML=`viser <b>#${c.idx}</b> (avance <b>${c.advance}</b>) ${c.sq.type?`• <b>${c.sq.type}</b>`:""} — <span class="muted">score: ${c.score}</span>`;ul.appendChild(li)})});const table=$("#sum-table");table.innerHTML="";SUMS.forEach(s=>{const aidx=Math.min(state.teams[0].pos+s,state.board.length-1),bidx=Math.min(state.teams[1].pos+s,state.board.length-1),aSq=state.board[aidx],bSq=state.board[bidx];const div=document.createElement("div");div.className="sum-cell";div.innerHTML=`<h5>+${s}</h5><div><span class="chip" style="outline:2px solid ${colorForType(aSq.type)}"></span> A → #${aidx} ${aSq.type?`<span class="muted">(${aSq.type})</span>`:""}</div><div><span class="chip" style="outline:2px solid ${colorForType(bSq.type)}"></span> B → #${bidx} ${bSq.type?`<span class="muted">(${bSq.type})</span>`:""}</div>`;table.appendChild(div)})}
function updateAimLayer(){const aim=$("#aim-layer");if(!aim)return;aim.innerHTML="";if(!state.stratOn)return;const totals=computeTotals();[0,1].forEach(teamIndex=>{const from=state.teams[teamIndex].pos,mainAdvance=teamIndex===0?totals.A.total:totals.B.total;function addDot(advance,main=false){const idx=Math.min(from+advance,state.board.length-1);if(idx<=from)return;const c=state.centers[idx],g=document.createElementNS(SVGNS,"g");g.setAttribute("class","dot "+(main?"main":"alt"));g.setAttribute("transform",`translate(${c.x},${c.y})`);const circ=document.createElementNS(SVGNS,"circle");circ.setAttribute("r",main?"18":"12");circ.setAttribute("fill",colorForType(state.board[idx].type));circ.setAttribute("opacity",main?".98":".8");const txt=document.createElementNS(SVGNS,"text");txt.setAttribute("text-anchor","middle");txt.setAttribute("y","5");txt.textContent=String(advance);g.appendChild(circ);g.appendChild(txt);aim.appendChild(g);if(main){const ring=document.createElementNS(SVGNS,"circle");ring.setAttribute("r","22");ring.setAttribute("fill","none");ring.setAttribute("stroke",state.teams[teamIndex].color);ring.setAttribute("stroke-width","3");g.appendChild(ring)}}SUMS.forEach(addDot);if(mainAdvance>0)addDot(mainAdvance,true)})}
function updateStrategyList(){const ul=$("#strategy-list");if(!ul)return;ul.innerHTML="";const fromA=state.teams[0].pos,fromB=state.teams[1].pos,cand=[];SUMS.forEach(s=>{const ia=Math.min(fromA+s,state.board.length-1),ib=Math.min(fromB+s,state.board.length-1),sqa=state.board[ia],sqb=state.board[ib];cand.push({team:"A",advance:s,idx:ia,sq:sqa,score:scoreOfSquare(sqa)});cand.push({team:"B",advance:s,idx:ib,sq:sqb,score:scoreOfSquare(sqb)})});const finishIdx=state.board.length-1;cand.forEach(c=>{if(c.idx===finishIdx)c.score+=100});cand.sort((a,b)=>b.score-a.score||a.advance-b.advance);cand.slice(0,10).forEach(c=>{const li=document.createElement("li");li.innerHTML=`<span style="color:${state.teams[c.team==="A"?0:1].color};font-weight:800">${c.team}</span> : viser <b>#${c.idx}</b> (avance <b>${c.advance}</b>) ${c.sq.type?`• <b>${c.sq.type}</b>`:""} — <span class="muted">score: ${c.score}</span>`;ul.appendChild(li)})}
function updateStrategyView(){updateAimLayer();updateStrategyList()}
function highlightPath(from,steps){const delay=70;for(let i=1;i<=steps;i++){const idx=Math.min(from+i,state.board.length-1),g=$$(".square")[idx];setTimeout(()=>g&&g.classList.add("highlight"),i*delay);setTimeout(()=>g&&g.classList.remove("highlight"),i*delay+600)}}function confettiBurst(c=200){const fx=$("#fx-layer"),colors=["#5ac8fa","#2dd4bf","#16db65","#ffd166","#a78bfa","#ff7b7b"],w=fx.clientWidth;for(let i=0;i<c;i++){const d=document.createElement("div");d.className="confetti";d.style.left=Math.random()*w+"px";d.style.top="-10px";d.style.background=colors[Math.floor(Math.random()*colors.length)];d.style.animationDelay=Math.random()*300+"ms";fx.appendChild(d);setTimeout(()=>d.remove(),1500)}}function hudMessage(h){$("#hud-text").innerHTML=h}
function moveTeamAnimated(idx,steps){return new Promise(res=>{if(steps===0)return res();const t=state.teams[idx];let rem=Math.abs(steps),dir=Math.sign(steps);const tick=()=>{t.pos=Math.max(0,Math.min(t.pos+dir,state.board.length-1));placeTokens();updateMiniMap();rem--;if(rem>0)setTimeout(tick,180);else res()};setTimeout(tick,120)})}
function revealMystery(sq){const choices=[{type:"bonus",value:2,label:"+2 bonus"},{type:"malus",value:2,label:"-2 malus"},{type:"skip",value:1,label:"Saut 1 tour"},{type:"teleport",value:6,label:"Téléport → 6"},{type:"steal",value:1,label:"Vole 1 flèche"}];Object.assign(sq,choices[Math.floor(Math.random()*choices.length)],{hidden:false})}
function applyEffect(ti,sq,last){const team=state.teams[ti];let msg="";if(sq.hidden)revealMystery(sq);switch(sq.type){case"bonus":team.pos=Math.min(team.pos+(sq.value||0),state.board.length-1);msg=`Bonus +${sq.value}`;break;case"malus":team.pos=Math.max(team.pos-(sq.value||0),0);msg=`Malus -${sq.value}`;break;case"skip":team.skip=(team.skip||0)+1;msg="⏭️ Sautera le prochain tour";break;case"teleport":{const dest=Number(sq.value||0);team.pos=dest<=state.board.length-1?dest:Math.min(state.board.length-1,team.pos+dest);msg=`🌀 Téléport → #${team.pos}`;}break;case"goal":msg=`🎯 Objectif atteint : ${sq.label}`;break;case"replay":msg=`🔁 Rejoue immédiatement (+${last})`;break;case"steal":{const opp=1-ti;state.teams[opp].arrowsPerShooter=2;msg="🟡 Vole une flèche : l’adversaire aura 2 flèches/tireur au prochain tour"}break;default:msg=""}return msg}
async function runRoundAnimation(tot){if(state.cineAuto)await enterCine();const fromA=state.teams[0].pos,fromB=state.teams[1].pos;hudMessage(`<span>${state.teams[0].name} :</span> <b>${tot.A.shooters[0]}</b> + <b>${tot.A.shooters[1]}</b> = <b>${tot.A.total}</b> &nbsp;|&nbsp; <span>${state.teams[1].name} :</span> <b>${tot.B.shooters[0]}</b> + <b>${tot.B.shooters[1]}</b> = <b>${tot.B.total}</b>`);highlightPath(fromA,tot.A.total);highlightPath(fromB,tot.B.total);await moveTeamAnimated(0,tot.A.total);let logs=[];const sqA=state.board[state.teams[0].pos],eA=applyEffect(0,sqA,tot.A.total);if(eA){logs.push(`${state.teams[0].name}: ${eA}`);placeTokens();updateMiniMap()}if(sqA.type==="replay"){await moveTeamAnimated(0,tot.A.total)}await moveTeamAnimated(1,tot.B.total);const sqB=state.board[state.teams[1].pos],eB=applyEffect(1,sqB,tot.B.total);if(eB){logs.push(`${state.teams[1].name}: ${eB}`);placeTokens();updateMiniMap()}if(sqB.type==="replay"){await moveTeamAnimated(1,tot.B.total)}if(state.teams[0].pos===state.board.length-1||state.teams[1].pos===state.board.length-1)confettiBurst(200);updateStrategyView();await new Promise(r=>setTimeout(r,350));await exitCine();return logs}
function pushHistory(from,to){state.history.push({round:state.round,from:[...from],to:[...to],snapshot:JSON.stringify(state)})}
async function undoAnimated(){if(state.history.length===0){toast("Rien à annuler.");return}const last=state.history.pop();if(state.cineAuto)await enterCine();const cur=[state.teams[0].pos,state.teams[1].pos],dA=last.from[0]-cur[0],dB=last.from[1]-cur[1];await moveTeamAnimated(0,dA);await moveTeamAnimated(1,dB);Object.assign(state,JSON.parse(last.snapshot));$("#round-no").textContent=state.round;$("#A-debuff").hidden=state.teams[0].arrowsPerShooter!==2;$("#B-debuff").hidden=state.teams[1].arrowsPerShooter!==2;$("#A-cumul").textContent=String(state.teams[0].cumul||0);$("#B-cumul").textContent=String(state.teams[1].cumul||0);buildArcherUI("A1",state.teams[0].p1,0);buildArcherUI("A2",state.teams[0].p2,0);buildArcherUI("B1",state.teams[1].p1,1);buildArcherUI("B2",state.teams[1].p2,1);computeLiveTotals();renderBoard();await new Promise(r=>setTimeout(r,250));await exitCine()}
function defaultBoard(){const N=63,sp={4:{type:"goal",label:"🎯 Objectif: Avance +4"},5:{type:"bonus",value:2,label:"+2 bonus"},8:{type:"goal",label:"🎯 Objectif: → +10"},9:{type:"malus",value:2,label:"-2 malus"},12:{type:"goal",label:"🎯 Objectif: Rejouer"},13:{type:"skip",value:1,label:"Saut 1 tour"},16:{type:"goal",label:"🎯 Objectif: Vole 1 flèche"},19:{type:"teleport",value:6,label:"Téléport → 6"},23:{type:"bonus",value:3,label:"+3 bonus"},27:{type:"mystery",value:0,label:"Mystère ?",hidden:true},31:{type:"bonus",value:2,label:"+2 bonus"},34:{type:"replay",value:0,label:"Rejouer"},36:{type:"malus",value:3,label:"-3 malus"},41:{type:"mystery",value:0,label:"Mystère ?",hidden:true},45:{type:"skip",value:1,label:"Saut 1 tour"},48:{type:"steal",value:1,label:"Vole 1 flèche"},50:{type:"bonus",value:2,label:"+2 bonus"},54:{type:"malus",value:4,label:"-4 malus"},58:{type:"teleport",value:32,label:"Téléport → 32"},60:{type:"mystery",value:0,label:"Mystère ?",hidden:true}};const arr=[];for(let i=0;i<=N;i++){if(i===0)arr.push({index:i,label:"Départ",type:"",value:0});else if(i===N)arr.push({index:i,label:"Arrivée 🎯",type:"",value:0});else if(sp[i])arr.push({index:i,...sp[i]});else arr.push({index:i,label:String(i),type:"",value:0})}return arr}
function computeBilan(){return state.teams.map((t,idx)=>({name:t.name,cumul:t.cumul,pos:t.pos,idx}))}function getWinnerName(){if(state.teams[0].pos===state.board.length-1&&state.teams[1].pos===state.board.length-1)return"Égalité";if(state.teams[0].pos===state.board.length-1)return state.teams[0].name;if(state.teams[1].pos===state.board.length-1)return state.teams[1].name;const b=computeBilan().sort((a,b)=>b.pos-a.pos||b.cumul-a.cumul);return b[0]?.name||""}function toClock(n){const s=Math.max(0,Math.round(Number(n)||0)),m=Math.floor(s/60),ss=String(s%60).padStart(2,'0');return `${m}:${ss}`}function buildQRDataPoints({classe,sexe}){const winner=getWinnerName();const items=state.teams.map(t=>({nom:t.name,prenom:"",classe,sexe:(sexe==='M'?'M':'F'),points_total:String(t.cumul),vainqueur:t.name===winner}));return JSON.stringify(items)}function buildQRDataV4({classe,sexe}){const items=state.teams.map(t=>({nom:t.name,prenom:"",classe,sexe:(sexe==='M'?'M':'F'),"200":toClock(t.cumul)}));return JSON.stringify(items)}async function openQR(){await loadQRLIB();$("#qr-bilan").showModal();refreshQR()}function refreshQR(){const mode=document.querySelector('input[name=\"qr-mode\"]:checked').value,classe=$("#qr-classe").value.trim()||"",sexe=$("#qr-sexe").value.trim()||"F",slot=$("#qr-slot");slot.innerHTML="";const data=mode==="v4"?buildQRDataV4({classe,sexe}):buildQRDataPoints({classe,sexe});new QRCode(slot,{text:data,width:360,height:360,colorDark:"#000000",colorLight:"#ffffff",correctLevel:QRCode.CorrectLevel.H});$("#qr-json").textContent=JSON.stringify(JSON.parse(data),null,2)}function downloadQR(){const slot=$("#qr-slot"),img=slot.querySelector('img')||slot.querySelector('canvas');if(!img)return alert("QR non généré");const url=img.tagName==='IMG'?img.src:img.toDataURL('image/png'),a=document.createElement('a');a.href=url;a.download=`QR_Arcathlon_${Date.now()}.png`;a.click()}
$("#cine-auto").addEventListener("change",e=>{state.cineAuto=e.target.checked});$("#toggle-strat").addEventListener("change",e=>{state.stratOn=e.target.checked;updateStrategyView()});$("#btn-bilan").addEventListener("click",openQR);$("#qr-refresh").addEventListener("click",refreshQR);$("#qr-download").addEventListener("click",downloadQR);$("#qr-close").addEventListener("click",()=>$("#qr-bilan").close());
$("#btn-start").addEventListener("click",()=>{state.teams[0].name=$("#teamA-name").value||"Équipe A";state.teams[0].p1=$("#teamA-p1").value||"A1";state.teams[0].p2=$("#teamA-p2").value||"A2";state.teams[0].color=$("#teamA-color").value||"#5ac8fa";state.teams[1].name=$("#teamB-name").value||"Équipe B";state.teams[1].p1=$("#teamB-p1").value||"B1";state.teams[1].p2=$("#teamB-p2").value||"B2";state.teams[1].color=$("#teamB-color").value||"#ff7b7b";state.teams.forEach(t=>{t.pos=0;t.skip=0;t.arrowsPerShooter=3;t.cumul=0});state.round=1;state.history=[];$("#nameA").textContent=state.teams[0].name;$("#nameB").textContent=state.teams[1].name;$("#round-no").textContent=state.round;$("#A-debuff").hidden=true;$("#B-debuff").hidden=true;$("#A-cumul").textContent="0";$("#B-cumul").textContent="0";buildArcherUI("A1",state.teams[0].p1,0);buildArcherUI("A2",state.teams[0].p2,0);buildArcherUI("B1",state.teams[1].p1,1);buildArcherUI("B2",state.teams[1].p2,1);state.board=defaultBoard();renderBoard();setActiveView("#view-points");save()});
$("#btn-resume").addEventListener("click",()=>{if(load()){$("#nameA").textContent=state.teams[0].name;$("#nameB").textContent=state.teams[1].name;$("#round-no").textContent=state.round;$("#A-debuff").hidden=state.teams[0].arrowsPerShooter!==2;$("#B-debuff").hidden=state.teams[1].arrowsPerShooter!==2;$("#A-cumul").textContent=String(state.teams[0].cumul||0);$("#B-cumul").textContent=String(state.teams[1].cumul||0);buildArcherUI("A1",state.teams[0].p1,0);buildArcherUI("A2",state.teams[0].p2,0);buildArcherUI("B1",state.teams[1].p1,1);buildArcherUI("B2",state.teams[1].p2,1);renderBoard();setActiveView("#view-points")}else toast("Aucune sauvegarde trouvée.")});
$("#btn-export").addEventListener("click",()=>{const a=document.createElement("a");a.href=URL.createObjectURL(new Blob([JSON.stringify(state,null,2)],{type:"application/json"}));a.download="arcathlon-spirale-v34-save.json";a.click();URL.revokeObjectURL(a.href)});
$("#import-save").addEventListener("change",e=>{const f=e.target.files[0];if(!f)return;const r=new FileReader();r.onload=()=>{try{Object.assign(state,JSON.parse(r.result));$("#nameA").textContent=state.teams[0].name;$("#nameB").textContent=state.teams[1].name;$("#round-no").textContent=state.round;$("#A-debuff").hidden=state.teams[0].arrowsPerShooter!==2;$("#B-debuff").hidden=state.teams[1].arrowsPerShooter!==2;$("#A-cumul").textContent=String(state.teams[0].cumul||0);$("#B-cumul").textContent=String(state.teams[1].cumul||0);buildArcherUI("A1",state.teams[0].p1,0);buildArcherUI("A2",state.teams[0].p2,0);buildArcherUI("B1",state.teams[1].p1,1);buildArcherUI("B2",state.teams[1].p2,1);renderBoard();setActiveView("#view-points");save()}catch{toast("Sauvegarde invalide.")}};r.readAsText(f,"utf-8")});
$("#btn-calc").addEventListener("click",()=>{computeLiveTotals();updatePointsView();updateStrategyView()});
$("#btn-validate").addEventListener("click",async()=>{const totals=computeTotals(),from=[state.teams[0].pos,state.teams[1].pos];if(state.teams[0].skip){totals.A.total=0;state.teams[0].skip--}if(state.teams[1].skip){totals.B.total=0;state.teams[1].skip--}state.teams[0].cumul+=totals.A.total;state.teams[1].cumul+=totals.B.total;$("#A-cumul").textContent=String(state.teams[0].cumul);$("#B-cumul").textContent=String(state.teams[1].cumul);setActiveView("#view-board");const logs=await runRoundAnimation(totals),to=[state.teams[0].pos,state.teams[1].pos];$("#A-debuff").hidden=true;$("#B-debuff").hidden=true;if(state.teams[0].arrowsPerShooter===2){$("#A-debuff").hidden=false;state.teams[0].arrowsPerShooter=3}if(state.teams[1].arrowsPerShooter===2){$("#B-debuff").hidden=false;state.teams[1].arrowsPerShooter=3}if(state.teams[0].pos===state.board.length-1||state.teams[1].pos===state.board.length-1){const winner=state.teams[0].pos===state.board.length-1&&state.teams[1].pos===state.board.length-1?"Égalité":(state.teams[0].pos===state.board.length-1?state.teams[0].name:state.teams[1].name);toast(`🏆 Fin de partie : <b>${winner}</b>`)}else if(logs.length){toast(logs.map(l=>"• "+l).join("<br>"))}buildArcherUI("A1",state.teams[0].p1,0);buildArcherUI("A2",state.teams[0].p2,0);buildArcherUI("B1",state.teams[1].p1,1);buildArcherUI("B2",state.teams[1].p2,1);computeLiveTotals();pushHistory(from,to);state.round++;$("#round-no").textContent=state.round;save();updatePointsView();updateStrategyView()});
$("#btn-undo").addEventListener("click",async()=>{await undoAnimated();updatePointsView();updateStrategyView()});$("#btn-save").addEventListener("click",()=>{save();toast("Sauvegardé (navigateur).")});$("#btn-help").addEventListener("click",()=>$("#help").showModal());$("#help-close").addEventListener("click",()=>$("#help").close());$("#modal-close").addEventListener("click",()=>$("#modal").close());$("#exit-cine").addEventListener("click",exitCine);
state.board=state.board.length?state.board:defaultBoard();renderBoard()})();